<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the enemy
state = scr_enemy_chase_state;
invul = false;
xaxis = 0;
yaxis = 0;
plr_obj = 0;

//Initialize stats
//Goblin stats
enemyStat[GOBLIN, HEALTH] = 4;
enemyStat[GOBLIN, DAMAGE] = 1;
enemyStat[GOBLIN, SPEED] = .75;
enemyStat[GOBLIN, ATK_SPEED] = .25;
enemyStat[GOBLIN, KNOCKBACK] = 7;

//Draugr Stats
enemyStat[DRAUGR, HEALTH] = 8;
enemyStat[DRAUGR, DAMAGE] = 2;
enemyStat[DRAUGR, SPEED] = .5;
enemyStat[DRAUGR, ATK_SPEED] = .75;
enemyStat[DRAUGR, KNOCKBACK] = 9;

//Demon Knight Stats
enemyStat[DEMONKNIGHT, HEALTH] = 10;
enemyStat[DEMONKNIGHT, DAMAGE] = 3;
enemyStat[DEMONKNIGHT, SPEED] = .25;
enemyStat[DEMONKNIGHT, ATK_SPEED] = 1;
enemyStat[DEMONKNIGHT, KNOCKBACK] = 10;

//Enemy check and stats
if (room = rm_test_room) {
    _enemy = GOBLIN;
    hp = enemyStat[_enemy, HEALTH];
    dmg = enemyStat[_enemy, DAMAGE];
    spd = enemyStat[_enemy, SPEED];
    atk_spd = enemyStat[_enemy, ATK_SPEED];
    knockback = enemyStat[_enemy, KNOCKBACK];
} else if (room = rm_test_room2) {
    _enemy = DRAUGR;
    hp = enemyStat[_enemy, HEALTH];
    dmg = enemyStat[_enemy, DAMAGE];
    spd = enemyStat[_enemy, SPEED];
    atk_spd = enemyStat[_enemy, ATK_SPEED];
    knockback = enemyStat[_enemy, KNOCKBACK];
}
/*
}  else if (room = rm_test_room3) {
    _enemy = DEMONKNIGHT;
    hp = enemyStat[_enemy, HEALTH];
    dmg = enemyStat[_enemy, DAMAGE];
    spd = enemyStat[_enemy, SPEED];
    atk_spd = enemyStat[_enemy, ATK_SPEED];
    knockback = enemyStat[_enemy, KNOCKBACK];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate score
if (instance_exists(o_score_multiplier)) {
    global.kill_count++;
    global.kills += (1 * (1 + global.kill_count));
    global.killsthiszone = global.kills;
    with (o_score_multiplier) {
        alarm[0] = room_speed*3;
    }
} else {
    if (instance_exists(plr_obj)) {
        instance_create(room_width/2, room_height/2, o_score_multiplier);
    }
    global.kill_count++;
    global.kills++;
    global.killsthiszone = global.kills;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stall state alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set state from "damaged" back to "check for player"
if (state == scr_enemy_damaged_state and invul == true) {
    state = scr_check_for_player;
    invul = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State switching during enemy collision
if (state == scr_collision_between_enemy) {
    state = scr_check_for_player;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
depth -= y;
script_execute(state);

if (instance_exists(o_a)) {
    plr_obj = o_a;
} else if (instance_exists(o_b)) {
    plr_obj = o_b;
} else if (instance_exists(o_c)) {
    plr_obj = o_c;
} 

if (hp &lt;= 0) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_enemy_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move away from other enemy
if (x == other.x and y == other.y and invul == false) {
    state = scr_collision_between_enemy;
    scr_collision_between_enemy(sign(other.id-id), 0);
}

if (invul == false) {
    var dir = point_direction(other.x, other.y, x, y);
    var hspd = lengthdir_x(.5, dir);
    var vspd = lengthdir_y(.5, dir);
    state = scr_collision_between_enemy;
    scr_collision_between_enemy(hspd, vspd);
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
